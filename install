#!/bin/bash
set -x
trap read debug
rm ../Music -r
rm ../oldconffiles -r
rm ../Pictures -r
rm ../Templates -r
rm ../Videos -r
rm ../Public -r

echo
echo INSTALLING KRYTEN
echo NB This may take some time
echo
echo 1. Update Pi
echo Update package library
sudo apt-get update
echo Update software
sudo apt-get upgrade -y 
echo Update Jessie OS
sudo apt-get dist-upgrade 
echo Pi updated
echo
echo 2. Install sound
echo 2.1 Install Swig 3.0.12
echo     install libbz2-dev
sudo apt-get install --upgrade -y libbz2-dev 
echo     install libreadline-dev 
sudo apt-get install --upgrade -y libreadline-dev 
echo     downloading PCRE 8.4
wget https://sourceforge.net/projects/pcre/files/pcre/8.40/pcre-8.40.tar.bz2 
echo     Unzipping
tar xjf pcre-8.40.tar.bz2 
echo     deleting download
rm *.bz2
cd pcre-8.40 
echo     configure PCRE
./configure --prefix=/usr                     \
            --docdir=/usr/share/doc/pcre-8.40 \
            --enable-unicode-properties       \
            --enable-pcre16                   \
            --enable-pcre32                   \
            --enable-pcregrep-libz            \
            --enable-pcregrep-libbz2          \
            --enable-pcretest-libreadline     \
            --disable-static >> install.log
echo     make PCRE
make 
echo     make install
sudo make install 
sudo mv -v /usr/lib/libpcre.so.* /lib
sudo ln -sfv ../../lib/$(readlink /usr/lib/libpcre.so) /usr/lib/libpcre.so
echo     PCRE installed
cd ~/Kryten
echo     downloading swig
wget downloads.sourceforge.net/swig/swig-3.0.12.tar.gz >> install.log
echo     unzipping
tar -xzvf swig-3.0.12.tar.gz >> install.log
echo     deleting download
rm *.gz
cd swig-3.0.12
echo     configure
./configure --prefix=/usr --without-clisp --without-maximum-compile-warnings >> install.log
echo     make
make >> install.log
#PY3=1 make check-python-examples  >> install.log
#PY3=1 make check-python-test-suite >> install.log
echo    install
sudo make install >> install.log
sudo install -v -m755 -d /usr/share/doc/swig-3.0.12 >> install.log
sudo cp -v -R Doc/* /usr/share/doc/swig-3.0.12 >> install.log
echo    Swig installed
cd ..
sudo apt-get install --upgrade -y libatlas-base-dev
sudo apt-get install --upgrade -y portaudio19-dev
sudo apt-get install --upgrade -y python3-all-dev
sudo apt-get install --upgrade -y libboost-all-dev
sudo pip3 install --upgrade pyaudio
git clone https://github.com/Kitt-AI/snowboy 
cd snowboy/swig/Python3
make
cp *.so ~/Kryten
cp *.py ~/Kryten
cd ~/Kryten
cp snowboy/examples/Python3/snowboydecoder.py .
cp snowboy/examples/Python3/resources/common.res resources
cp snowboy/examples/Python3/resources/ding.wav resources
cp snowboy/examples/Python3/resources/dong.wav resources
cp resources/Kryten.pmdl .
cp resources/.asoundrc ~
cp resources/.bashrc ~
sudo cp resources/alsa.conf /usr/share/alsa
sudo mv /usr/share/alsa/alsa.conf.d /usr/share/alsa/alsa.conf.backup
sudo apt-get install --upgrade -y jackd2
sudo apt-get install --upgrade -y flac
sudo pip3 install --upgrade speechRecognition
sudo pip3 install --upgrade google-api-python-client
export GOOGLE_APPLICATION_CREDENTIALS=resources/Kryten.json
jack_control start
rm swig-3.0.12 -r -f
rm pcre-8.40 -r -f
rm snowboy -r -f
sudo pip3 install gtts --upgrade
sudo pip3 install gtts
sudo apt-get install --upgrade -y mpg321

sudo apt-get install --upgrade cmake
sudo apt-get install --upgrade libjpeg-dev
sudo apt-get install --upgrade libtiff5-dev
sudo apt-get install --upgrade libjasper-dev
sudo apt-get install --upgrade libavcodec-dev
sudo apt-get install --upgrade libavformat-dev
sudo apt-get install --upgrade -y libswscale-dev
sudo apt-get install --upgrade -y libv4l-dev
sudo apt-get install --upgrade -y libxvidcore-dev
sudo apt-get install --upgrade -y libx264-dev
sudo apt-get install --upgrade -y libgtk2.0-dev
sudo apt-get install --upgrade -y gfortran
wget -O opencv.zip https://github.com/Itseez/opencv/archive/3.2.0.zip
unzip opencv.zip
wget -O opencv_contrib.zip https://github.com/Itseez/opencv_contrib/archive/3.2.0.zip
unzip opencv_contrib.zip
cd opencv-3.2.0
mkdir build
cd build

cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON -D OPENCV_EXTRA_MODULES_PATH=~/Kryten/opencv_contrib-3.2.0/modules -D BUILD_EXAMPLES=ON ..

make
sudo make install
sudo ldconfig

